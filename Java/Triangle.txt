package com.company;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.BufferedReader;
import java.util.ArrayList;
import java.io.FileReader;

public class Main {
    public static void main(String[] args) {
        ArrayList<Double> ordinateAxes = new ArrayList<>();
            try {
                BufferedReader br = null;
                br = new BufferedReader(new FileReader("input.txt"));
                String line;
                while((line = br.readLine()) != null ){
                    ordinateAxes.add(Double.parseDouble(line));
                }
                br.close();
            } catch (IOException io){
                System.out.println("Don't want read");
            }

        ArrayList<Triangle> triangles = new ArrayList<>();
            for (int i = 0; i < 3;i++){
                int ax = 0, ay = 1, bx = 2, by = 3, cx = 4, cy = 5;
                if(i == 0){
                    Triangle triangle = new Triangle(ordinateAxes.get(ax), ordinateAxes.get(ay), ordinateAxes.get(bx), ordinateAxes.get(by), ordinateAxes.get(cx), ordinateAxes.get(cy));
                    triangles.add(triangle);
                }else{
                    ax = ax+5;  ay = ay+5;  bx = bx+5;  by = by+5;  cx = cx+5;  cy = cy+5;
                    Triangle triangle = new Triangle(ordinateAxes.get(ax), ordinateAxes.get(ay), ordinateAxes.get(bx), ordinateAxes.get(by), ordinateAxes.get(cx), ordinateAxes.get(cy));
                    triangles.add(triangle);
                }
            }

        for(Triangle triangle : triangles){triangle.consoleOutput();}
        WriteDate wd = new WriteDate(triangles.get(0), triangles.get(1), triangles.get(2));
        wd.writeToOutputFile();
    }
}

class Point {
    double x,y;

    public Point (double x, double y){
        this.x = x;
        this.y = y;
    }
}

class Triangle {
    Point pointA, pointB, pointC;
    double sectionAB, sectionBC, sectionCA;

    public Triangle(){};
    public Triangle(double aX, double aY, double bX, double bY, double cX, double cY) {
        this.pointA = new Point(aX, aY);
        this.pointB = new Point(bX, bY);
        this.pointC = new Point(cX, cY);
    }

    double getAB(){
        sectionAB = ((pointA.x - pointA.y)*(pointA.x - pointA.y)) + ((pointB.x - pointB.y)*(pointB.x - pointB.y));//вычислить расстояние между pointA и pointB
        return Math.sqrt(sectionAB);
    }
    double getBC(){
        sectionBC = ((pointB.x - pointB.y)*(pointB.x - pointB.y)) + ((pointC.x - pointC.y)*(pointC.x - pointC.y));//вычислить расстояние между pointB и pointC
        return Math.sqrt(sectionBC);
    }
    double getAC(){
        sectionCA = ((pointC.x - pointC.y)*(pointC.x - pointC.y)) + ((pointB.x - pointB.y)*(pointB.x - pointB.y));//вычислить расстояние между pointC и pointA
        return Math.sqrt(sectionCA);
    }

    public void checkingTheIntersectionOfSegments_AB_BC_AC(){
        //todo
        //  проверить пересечение отрезков, образованных точками vertexA и vertexB или
        //  vertexB и vertexC или vertexA и vertexC с любым из отрезков другого треугольника
    }

    public void consoleOutput(){
        System.out.println("A: " +pointA.x + ", " + pointA.y + "\n"+ "B: "+ pointB.x +", "+ pointB.y +"\n"+"C: "+ pointC.x +", "+ pointC.y);
        System.out.println("AB: "+getAB() + "\n"+ "BC: "+ getBC() + "\n" +"CA: "+ getAC());
    }
}


class Segment{
    Point pointA, pointB;

    public Segment(){};
    public Segment(double aX, double aY, double bX, double bY) {
        this.pointA = new Point(aX, aY);
        this.pointB = new Point(bX, bY);
    }

    public void segmentIntersectionCheck(){
        //todo
        //  проверка пересечения с другим сегментом
    }
}

class WriteDate{
    Triangle triangle1;
    Triangle triangle2;
    Triangle triangle3;

    public WriteDate(Triangle triangle1, Triangle triangle2, Triangle triangle3){
        this.triangle1 = triangle1;
        this.triangle2 = triangle2;
        this.triangle3 = triangle3;
    }

    public void writeToOutputFile(){
        try {
            File file = new File("output.txt");
            if(file.exists()){
                file.createNewFile();
            }else{
                PrintWriter pw = new PrintWriter(file);
                pw.println("A: " +triangle1.pointA.x + ", " + triangle1.pointA.y + "\n"+ "B: "+ triangle1.pointB.x +", "+ triangle1.pointB.y +"\n"+"C: "+ triangle1.pointC.x +", "+ triangle1.pointC.y);
                pw.println("AB: "+triangle1.getAB() + "\n"+ "BC: "+ triangle1.getBC() + "\n" +"CA: "+ triangle1.getAC());
                pw.println("A: " +triangle2.pointA.x + ", " + triangle2.pointA.y + "\n"+ "B: "+ triangle2.pointB.x +", "+ triangle2.pointB.y +"\n"+"C: "+ triangle2.pointC.x +", "+ triangle2.pointC.y);
                pw.println("AB: "+triangle2.getAB() + "\n"+ "BC: "+ triangle2.getBC() + "\n" +"CA: "+ triangle2.getAC());
                pw.println("A: " +triangle3.pointA.x + ", " + triangle3.pointA.y + "\n"+ "B: "+ triangle3.pointB.x +", "+ triangle3.pointB.y +"\n"+"C: "+ triangle3.pointC.x +", "+ triangle3.pointC.y);
                pw.println("AB: "+triangle3.getAB() + "\n"+ "BC: "+ triangle3.getBC() + "\n" +"CA: "+ triangle3.getAC());
                pw.close();
            }
        } catch (IOException io){
            System.out.println("Don't want write");
        }
    }
}